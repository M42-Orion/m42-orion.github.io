<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python代码片段(vscode)</title>
    <url>/m42-orion/2022/04/23/python%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-vscode/</url>
    <content><![CDATA[<p>在最新的vscode的python插件更新后，不提供代码片段的功能，因此要自己手添加用户代码片段。使用方法如下：</p>
<ul>
<li>复制下方给出的代码片段</li>
<li>打开vscode</li>
<li>左下角设置-&gt;用户代码片段-&gt;python.json</li>
<li>全部删掉后替换成刚刚复制的内容</li>
</ul>
<p>再次使用后vscode提供代码片段联想功能,输入部分代码后可提供多种代码格式,如下图：<br><img src="https://liu__tao.gitee.io/drawing-bed/blog_img/python%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5(vscode)/1.png" alt="1"><br><img src="https://liu__tao.gitee.io/drawing-bed/blog_img/python%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5(vscode)/2.png" alt="2"></p>
<p>可根据代码片段书写格式自定义代码片段。<br>代码片段如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">	<span class="comment">// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and </span></span><br><span class="line">	<span class="comment">// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:</span></span><br><span class="line">	<span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. Placeholders with the </span></span><br><span class="line">	<span class="comment">// same ids are connected.</span></span><br><span class="line">	<span class="comment">// Example:</span></span><br><span class="line">	<span class="comment">// &quot;Print to console&quot;: &#123;</span></span><br><span class="line">	<span class="comment">// 	&quot;prefix&quot;: &quot;log&quot;,</span></span><br><span class="line">	<span class="comment">// 	&quot;body&quot;: [</span></span><br><span class="line">	<span class="comment">// 		&quot;console.log(&#x27;$1&#x27;);&quot;,</span></span><br><span class="line">	<span class="comment">// 		&quot;$2&quot;</span></span><br><span class="line">	<span class="comment">// 	],</span></span><br><span class="line">	<span class="comment">// 	&quot;description&quot;: &quot;Log output to console&quot;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="attr">&quot;HEADER&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HEADER&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;#!/usr/bin/env python&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;# -*- encoding: utf-8 -*-&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;&#x27;&#x27;&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;@文件    :$TM_FILENAME&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;@说明    :&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;@时间    :$CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;@作者    :ljw&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;@版本    :1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;&#x27;&#x27;&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;$0&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;if&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;if&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;if $&#123;1:expression&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;2:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for an if statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;if/else&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;if/else&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;if $&#123;1:condition&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;2:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;else:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for an if statement with else&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;elif&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elif&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;elif $&#123;1:expression&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;2:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for an elif&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;else&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;else&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;else:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;1:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for an else&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;while&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;while&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;while $&#123;1:expression&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;2:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a while loop&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;while/else&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;while/else&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;while $&#123;1:expression&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;2:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;else:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a while loop with else&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;for&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;for&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;for $&#123;1:target_list&#125; in $&#123;2:expression_list&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a for loop&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;for/else&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;for/else&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;for $&#123;1:target_list&#125; in $&#123;2:expression_list&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;else:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a for loop with else&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;try/except&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;try/except&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;try:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;1:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;except $&#123;2:expression&#125; as $&#123;3:identifier&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a try/except statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;try/finally&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;try/finally&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;try:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;1:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;finally:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;2:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a try/finally statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;try/except/else&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;try/except/else&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;try:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;1:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;except $&#123;2:expression&#125; as $&#123;3:identifier&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;else:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;5:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a try/except/else statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;try/except/finally&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;try/except/finally&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;try:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;1:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;except $&#123;2:expression&#125; as $&#123;3:identifier&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;finally:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;5:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a try/except/finally statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;try/except/else/finally&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;try/except/else/finally&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;try:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;1:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;except $&#123;2:expression&#125; as $&#123;3:identifier&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;else:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;5:pass&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;finally:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;6:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a try/except/else/finally statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;with&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;with&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;with $&#123;1:expression&#125; as $&#123;2:target&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a with statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;def&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;def&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;def $&#123;1:funcname&#125;($&#123;2:parameter_list&#125;):&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:docstring&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a function definition&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;def(class method)&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;def(class method)&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;def $&#123;1:funcname&#125;(self, $&#123;2:parameter_list&#125;):&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:docstring&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a class method&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;def(static class method)&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;def(static class method)&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;@staticmethod&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;def $&#123;1:funcname&#125;($&#123;2:parameter_list&#125;):&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:docstring&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a static class method&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;def(abstract class method)&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;def(abstract class method)&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;def $&#123;1:funcname&#125;(self, $&#123;2:parameter_list&#125;):&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:docstring&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\traise NotImplementedError&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for an abstract class method&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;class&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;class&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;class $&#123;1:classname&#125;($&#123;2:object&#125;):&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:docstring&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t\&quot;\&quot;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a class definition&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;lambda&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lambda&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;lambda $&#123;1:parameter_list&#125;: $&#123;2:expression&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a lambda statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;if(main)&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;__main__&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;if __name__ == \&quot;__main__\&quot;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;    $&#123;1:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for a `if __name__ == \&quot;__main__\&quot;: ...` block&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;async/def&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;async/def&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;async def $&#123;1:funcname&#125;($&#123;2:parameter_list&#125;):&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:pass&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for an async statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;async/for&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;async/for&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;async for $&#123;1:target&#125; in $&#123;2:iter&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:block&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for an async for statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;async/for/else&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;async/for/else&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;async for $&#123;1:target&#125; in $&#123;2:iter&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:block&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;else:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;4:block&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for an async for statement with else&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;async/with&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;async/with&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="string">&quot;async with $&#123;1:expr&#125; as $&#123;2:var&#125;:&quot;</span><span class="punctuation">,</span></span><br><span class="line">			<span class="string">&quot;\t$&#123;3:block&#125;&quot;</span></span><br><span class="line">		<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for an async with statement&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;ipdb&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ipdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;import ipdb; ipdb.set_trace()&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for ipdb debug&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;pdb&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;import pdb; pdb.set_trace()&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for pdb debug&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;pudb&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pudb&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;import pudb; pudb.set_trace()&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet for pudb debug&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;add/new/cell&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;add/new/cell&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;# %%&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet to add a new cell&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;mark/markdown&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mark/markdown&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;# %% [markdown]&quot;</span><span class="punctuation">,</span></span><br><span class="line">		<span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code snippet to add a new markdown cell&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>hello world</title>
    <url>/m42-orion/2022/04/23/hello-world/</url>
    <content><![CDATA[<h2 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#FileName: HelloWorld.java  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>   #如果有 <span class="keyword">public</span> 类的话，类名必须和文件同名，注意大小写  </span><br><span class="line">&#123;  </span><br><span class="line">  #Java 入口程序，程序从此入口  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>  </span><br><span class="line">  &#123;  </span><br><span class="line">  #向控制台打印一条语句  </span><br><span class="line">    System.out.println(<span class="string">&quot;Hello,World!&quot;</span>);  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>                <span class="meta">#main 入口函数  </span></span><br><span class="line">&#123;  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello,World!&quot;</span>); <span class="meta">#printf 函数打印  </span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;               #函数返回值  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>               <span class="comment">//std::cout 要用到的头文件  </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>                <span class="comment">//标准输入输出头文件  </span></span></span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello,World!--Way 1\n&quot;</span>);    <span class="comment">//printf 语句打印  </span></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Hello,World!--Way 2&quot;</span>);        <span class="comment">//puts 语句  </span></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Hello,&quot;</span> <span class="string">&quot; &quot;</span> <span class="string">&quot;World!--Way 3&quot;</span>); <span class="comment">//字符串拼接  </span></span><br><span class="line">  std::cout &lt;&lt; <span class="string">&quot;Hello,World!--Way 4&quot;</span> &lt;&lt; std::endl; <span class="comment">//C++ 教科书上写法  </span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;                                        <span class="comment">//作为注释  </span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello,World!&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;  </span><br><span class="line">&lt;body&gt;  </span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello,World!&quot;</span>;            <span class="comment">//打印语句  </span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;The first php program!&quot;</span>;  <span class="comment">//打印语句  </span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">phpinfo</span>();                 <span class="comment">//phpinfo()系统函数,输出环境信息  </span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line">&lt;/body&gt;  </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">sys.<span class="title function_">puts</span>(<span class="string">&quot;Hello,World!&quot;</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;Hello,World!&#x27;</span> <span class="keyword">from</span> dual;  </span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is the first program!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello,World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>详解post与get</title>
    <url>/m42-orion/2022/04/23/%E8%AF%A6%E8%A7%A3post%E4%B8%8Eget/</url>
    <content><![CDATA[<h2 id="POST和GET"><a href="#POST和GET" class="headerlink" title="POST和GET"></a>POST和GET</h2><p>网络请求有OPTIONS、HEAD、GET、POST、PUT、DELETE、TRACE、CONNECT这常见的几种方式，其中最常见也就是post与get方法，在开发过程当中常常会遇到一个问题，这个接口到底是使用post请求好一点还是使用get请求好一点？两者到底有什么区别？这篇文章就将给出对应的解释。</p>
<h2 id="对post与get区别的错误理解"><a href="#对post与get区别的错误理解" class="headerlink" title="对post与get区别的错误理解"></a>对post与get区别的错误理解</h2><h3 id="get安全性非常低，post安全性较高"><a href="#get安全性非常低，post安全性较高" class="headerlink" title="get安全性非常低，post安全性较高"></a>get安全性非常低，post安全性较高</h3><p>一般来说，在对新手上手的时候会跟他说这样的话，并说get是能够明文看见的，但是post不行…这个说法是有一定道理的，对于完全不知道情况的普通用户来说，安全一点确实有道理，因为从浏览器的地址上确实看不到post请求的参数，url链接也变短了，但是不代表数据被完全隐藏，实际上通过简单的开发者工具抓包就能够看到明文数据。因此某些极小的点上可以说安全，但是实际上可能并不安全。 </p>
<h3 id="get传送的数据量较小，不能大于2KB。post传送的数据量较大，一般被默认为不受限制。"><a href="#get传送的数据量较小，不能大于2KB。post传送的数据量较大，一般被默认为不受限制。" class="headerlink" title="get传送的数据量较小，不能大于2KB。post传送的数据量较大，一般被默认为不受限制。"></a>get传送的数据量较小，不能大于2KB。post传送的数据量较大，一般被默认为不受限制。</h3><p>这个说法其实是指当我们使用get请求的时候，参数会直接被显示在url当中如：<code>https://www.duitang.com/blog/?id=1121578266</code>。这里的参数id尚且为int，如果为中文需要url编码，以至于链接会非常的长，这个长度是有限制的，这个限制却不是get方法的限制，之所以限制是浏览器跟服务器的限制，两者为了防止链接太长导致解析压力过大影响用户体验，所以才加以限制。相对的post确实不用在意大小，因为参数传输方式不同导致解析压力并不大。</p>
<h2 id="get和post的区别"><a href="#get和post的区别" class="headerlink" title="get和post的区别"></a>get和post的区别</h2><h3 id="get获取数据，post提交数据。"><a href="#get获取数据，post提交数据。" class="headerlink" title="get获取数据，post提交数据。"></a>get获取数据，post提交数据。</h3><p>这是从语义上进行的理解，即get与post的中文翻译，其实HTTP的八种方法都能够携带参数，服务器拿到参数之后想做什么完全由服务器决定而非由请求方法决定，但是在设计之初就给出建议让get承担获取数据，让post承担提交数据的功能。</p>
<p>注：HTTP请求，最初设定了八种方法。这八种方法本质上没有任何区别。只是让请求，更加有语义而已。</p>
<ul>
<li><strong>OPTIONS</strong> 返回服务器所支持的请求方法</li>
<li><strong>GET</strong> 向服务器获取指定资源</li>
<li><strong>HEAD</strong> 与GET一致，只不过响应体不返回，只返回响应头</li>
<li><strong>POST</strong> 向服务器提交数据，数据放在请求体里</li>
<li><strong>PUT</strong> 与POST相似，只是具有幂等特性，一般用于更新</li>
<li><strong>DELETE</strong> 删除服务器指定资源</li>
<li><strong>TRACE</strong> 回显服务器端收到的请求，测试的时候会用到这个</li>
<li><strong>CONNECT</strong> 预留，暂无使用</li>
</ul>
<h3 id="数据传输编码不同"><a href="#数据传输编码不同" class="headerlink" title="数据传输编码不同"></a>数据传输编码不同</h3><p>Get限制Form表单的数据集的值必须为ASCII字符，因此当出现不属于ASCII编码的字符在get请求当中的时候，必须对链接进行编码，常见的如果链接当中出现空格，链接上会把空格编码成%20，不信可以粘贴以下链接到浏览器，看看链接发生的变化： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://www.baidu.com/s?wd=hello world</span><br><span class="line"><span class="comment"># 以下是浏览器编码后的结果</span></span><br><span class="line">https://www.baidu.com/s?wd=hello%20world</span><br></pre></td></tr></table></figure>

<p>Post相比get支持整个ISO10646字符集,能够有更多的数据格式的兼容，因此使用起来会更加的方便，但是测试起来可能不是很方便。</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li>Get执行效率却比Post方法好。</li>
<li>Get是form提交的默认方法。</li>
<li>GET在浏览器回退时是无害的，而POST会再次提交请求。 </li>
<li>历史记录不能够保存post的参数，却能够保存get的请求参数。</li>
<li>POST用于修改服务器上的数据，有副作用，非幂等。</li>
</ul>
<h2 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h2><p>代码采用fastpai进行演示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">import</span> uvicorn</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_root</span>():</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;Hello&quot;</span>: <span class="string">&quot;World&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>(<span class="title class_ inherited__">BaseModel</span>):  <span class="comment"># 继承了BaseModel，定义了People的数据格式</span></span><br><span class="line">    name: <span class="built_in">str</span> = <span class="literal">None</span>  <span class="comment"># 默认了name的值为None</span></span><br><span class="line">    age: <span class="built_in">int</span> = <span class="number">18</span>  <span class="comment"># 默认了age为18</span></span><br><span class="line">    sex: <span class="built_in">str</span> = <span class="string">&quot;renyao&quot;</span>  <span class="comment"># 默认了sex为renyao</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/fastapi/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">postdate</span>(<span class="params">people: People</span>):  <span class="comment"># 传入一个People类型的参数people</span></span><br><span class="line">    <span class="keyword">return</span> people</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    uvicorn.run(<span class="string">&quot;test:app&quot;</span>, host=<span class="string">&quot;localhost&quot;</span>, port=<span class="number">5000</span>, log_level=<span class="string">&quot;info&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>可以postget在设计上的确具有很多差异，但是实际使用的时候两者都能够满足传参的需求，但是为了标准，尽可能的使用get用于获取数据，用post提交数据。百度搜索采用的就是get获取数据，而几乎所有的账户登录都是post用于提交数据。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>协议</tag>
      </tags>
  </entry>
  <entry>
    <title>python数据校验</title>
    <url>/m42-orion/2022/04/24/python%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="什么是数据校验？"><a href="#什么是数据校验？" class="headerlink" title="什么是数据校验？"></a>什么是数据校验？</h2><p>在实际的开发过程当中，我们往往会面临很多需要数据对接的情况，这时候一个函数可能需要处理一个或者多个数据参数，也就是说函数的参数面临着多且不确定性，参数本身不确定性还伴随着在传递过程当中是否符合规范的问题。以python函数为例，以下是随意写法和标准写法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 随意</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">max</span>(<span class="params">a,b</span>):</span><br><span class="line">    <span class="keyword">if</span> a&gt;b:</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    <span class="keyword">elif</span> a&lt;b:</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建议的标准写法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">max</span>(<span class="params">a:<span class="built_in">int</span>=<span class="number">0</span>,</span></span><br><span class="line"><span class="params">        b:<span class="built_in">int</span>=<span class="number">0</span></span>)-&gt;<span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    这里描述函数的功能</span></span><br><span class="line"><span class="string">    :param a: 参数描述</span></span><br><span class="line"><span class="string">    :param b: 参数描述</span></span><br><span class="line"><span class="string">    :returns: 返回描述</span></span><br><span class="line"><span class="string">    :raises keyError: 可能的错误捕获描述</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> a&gt;b:</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    <span class="keyword">elif</span> a&lt;b:</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>除此之外还有<code>def exmaple2(required_arg, *arg, **kwarg):</code>这样的写法，这些写法都是在极力是的python的函数与参数信息更加明确，让调用函数的时候能够清楚的知道函数的作用。<br>由于需求的复杂逐步增加，因此数据接口从原先的单纯的写法升级为固定规则，需要一些额外的协助手段才能够帮助使用者规范接口，<code>pydantic</code>库的出现极大程度的解决了这些问题。</p>
<h2 id="pydantic库的基础"><a href="#pydantic库的基础" class="headerlink" title="pydantic库的基础"></a>pydantic库的基础</h2><h3 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h3><h4 id="schema基本定义方法"><a href="#schema基本定义方法" class="headerlink" title="schema基本定义方法"></a>schema基本定义方法</h4><p>pydantic库的数据定义方式是通过BaseModel类来进行定义的，所有基于pydantic的数据类型本质上都是一个BaseModel类，它最基本的使用方式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    name: <span class="built_in">str</span></span><br></pre></td></tr></table></figure>

<h4 id="基本的schema实例化方法"><a href="#基本的schema实例化方法" class="headerlink" title="基本的schema实例化方法"></a>基本的schema实例化方法</h4><p>调用时，我们只需要对其进行实例化即可，实例化方法有以下几种：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#直接传值</span></span><br><span class="line">p = Person(name=<span class="string">&quot;Tom&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(p.json()) <span class="comment"># &#123;&quot;name&quot;: &quot;Tom&quot;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过字典传入</span></span><br><span class="line">p = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Tom&quot;</span>&#125;</span><br><span class="line">p = Person(**p)</span><br><span class="line"><span class="built_in">print</span>(p.json()) <span class="comment"># &#123;&quot;name&quot;: &quot;Tom&quot;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过其他的实例化对象传入</span></span><br><span class="line">p2 = Person.copy(p)</span><br><span class="line"><span class="built_in">print</span>(p2.json()) <span class="comment"># &#123;&quot;name&quot;: &quot;Tom&quot;&#125;</span></span><br></pre></td></tr></table></figure>

<p>当传入值错误的时候，pydantic就会抛出报错，例如：<code>Person(person=&quot;Tom&quot;)</code> ;pydantic会抛出异常;另一方面，如果传入值多于定义值时，BaseModel也会自动对其进行过滤。如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = Person(name=<span class="string">&quot;Tom&quot;</span>, gender=<span class="string">&quot;man&quot;</span>, age=<span class="number">24</span>)</span><br><span class="line"><span class="built_in">print</span>(p.json()) <span class="comment"># &#123;&quot;name&quot;: &quot;Tom&quot;&#125;</span></span><br></pre></td></tr></table></figure>

<p>可以看到，额外的参数gender与age都被自动过滤了。通过这种方式，数据的传递将会更为安全，但是，同样的，这也要求我们在前期的schema定义中必须要尽可能地定义完全。此外，pydantic在数据传输时会直接进行数据类型转换，因此，如果数据传输格式错误，但是可以通过转换变换为正确的数据类型是，数据传输也可以成功，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = Person(name=<span class="number">123</span>)</span><br><span class="line"><span class="built_in">print</span>(p.json()) <span class="comment"># &#123;&quot;name&quot;: &quot;123&quot;&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="pydantic基本数据类型"><a href="#pydantic基本数据类型" class="headerlink" title="pydantic基本数据类型"></a>pydantic基本数据类型</h4><p>下面，我们来看一下pydantic中的一些常用的基本类型。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Dict</span>, <span class="type">List</span>, <span class="type">Sequence</span>, <span class="type">Set</span>, <span class="type">Tuple</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    a: <span class="built_in">int</span> <span class="comment"># 整型</span></span><br><span class="line">    b: <span class="built_in">float</span> <span class="comment"># 浮点型</span></span><br><span class="line">    c: <span class="built_in">str</span> <span class="comment"># 字符串</span></span><br><span class="line">    d: <span class="built_in">bool</span> <span class="comment"># 布尔型</span></span><br><span class="line">    e: <span class="type">List</span>[<span class="built_in">int</span>] <span class="comment"># 整型列表</span></span><br><span class="line">    f: <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="built_in">int</span>] <span class="comment"># 字典型，key为str，value为int</span></span><br><span class="line">    g: <span class="type">Set</span>[<span class="built_in">int</span>] <span class="comment"># 集合</span></span><br><span class="line">    h: <span class="type">Tuple</span>[<span class="built_in">str</span>, <span class="built_in">int</span>] <span class="comment"># 元组</span></span><br></pre></td></tr></table></figure>

<p>以上都是基础的使用，在实际使用过程当中，可以参考官方文档，会给出更加详细的写法。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>数据校验常常使用在需要被绑定在一起的复杂数据之上，也用于数据传递的校验，如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">int</span>  <span class="comment"># 无默认值，必填字段</span></span><br><span class="line">    name = <span class="string">&#x27;John Doe&#x27;</span>  <span class="comment"># 有默认值，选填字段</span></span><br><span class="line">    signup_ts: <span class="type">Optional</span>[datetime] = <span class="literal">None</span>  <span class="comment"># 选填字段</span></span><br><span class="line">    friends: <span class="type">List</span>[<span class="built_in">int</span>] = []  <span class="comment"># 列表中的元素是int类型或者是可以转换成int类型的其他类型</span></span><br><span class="line"></span><br><span class="line">error_data = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;a123&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;signup_ts&#x27;</span>: <span class="string">&#x27;2017-06-01 12:22&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;friends&#x27;</span>: [<span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    User(**error_data)</span><br><span class="line"><span class="keyword">except</span> ValidationError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e.json())</span><br></pre></td></tr></table></figure>

<p>这个案例展示了数据在接受错误参数的时候进行的自动校验，这样在数据十分复杂的情况下的时候就能够及时的判定数据是否传输异常而不是去一个个检查数据的状态。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这是一个规范性的问题，不需要太多总结，反而需要足够的代码经验去填补这方面经验的缺失。个人也注意到这个问题，因此写下一篇超短的文章记录一下。<br>最后附上官网地址，只有全英文的：<a href="https://pydantic-docs.helpmanual.io/">https://pydantic-docs.helpmanual.io/</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode离线远程开发配置</title>
    <url>/m42-orion/2022/04/25/vscode%E7%A6%BB%E7%BA%BF%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>由于各种原因，在开发过程当中需要做到网络的物理隔绝，因此离线部署环境或者部署开发工具就成为了面临的重大难题，尤其是当需要配置vscode离线远程开发的时候。当然使用pycharm可能不需要这么麻烦，但是个人习惯导致自己觉得vscode更加顺手，同时也更加美观，在后续的vscode更新当中丰富的插件也让我难以割舍，因此配置离线环境下vscode的远程安装就成了一大难题。  </p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="下载VScode"><a href="#下载VScode" class="headerlink" title="下载VScode"></a>下载VScode</h3><p>首先在Vscode官网：<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a> 点击下载；在浏览器或者下载软件中就可以看到一个下载地址如下图所示，由于国内下载速度非常缓慢，可以将图中红框内的链接部分：az764295.vo.msecnd.net替换为国内镜像：vscode.cdn.azure.cn来提升下载速度。</p>
<h3 id="插件下载与安装"><a href="#插件下载与安装" class="headerlink" title="插件下载与安装"></a>插件下载与安装</h3><p>在插件商店搜索插件，直接点击这里就能跳转到插件的页面上去，页面上提供离线包的下载，直接下载就行。<br><img src="https://liu__tao.gitee.io/drawing-bed/blog_img/vscode%E7%A6%BB%E7%BA%BF%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91%E9%85%8D%E7%BD%AE/%E7%82%B9%E5%87%BB.png" alt="点击"></p>
<blockquote>
<p><strong>注意：</strong>插件伴随着vscode版本的更新而更新，因此需要注意版本的对应关系。</p>
</blockquote>
<h3 id="插件的离线安装"><a href="#插件的离线安装" class="headerlink" title="插件的离线安装"></a>插件的离线安装</h3><p>离线安装如下，选中安装包即可<br><img src="https://liu__tao.gitee.io/drawing-bed/blog_img/vscode%E7%A6%BB%E7%BA%BF%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91%E9%85%8D%E7%BD%AE/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85.png" alt="离线安装"></p>
<h3 id="配置远程开发环境"><a href="#配置远程开发环境" class="headerlink" title="配置远程开发环境"></a>配置远程开发环境</h3><p>在离线状态下，除了需要下载<code>remote-ssh</code>跟<code>Remote - SSH: Editing Configuration Files</code>两个插件以外，还需要下载远程包。即所需依赖包vscode-server-linux-x64.tar.gz，下载链接为：<br><a href="https://update.code.visualstudio.com/commit:[id]/server-linux-x64/stable">https://update.code.visualstudio.com/commit:[id]/server-linux-x64/stable</a><br>其中[id]用所使用的vscode commit ID进行替换，id在帮助-&gt;关于-&gt;提交，则完整下载链接应为如下案例：<br><a href="https://update.code.visualstudio.com/commit:507ce72a4466fbb27b715c3722558bb15afa9f48/server-linux-x64/stable">https://update.code.visualstudio.com/commit:507ce72a4466fbb27b715c3722558bb15afa9f48/server-linux-x64/stable</a></p>
<h3 id="远程配置"><a href="#远程配置" class="headerlink" title="远程配置"></a>远程配置</h3><ul>
<li><p>将下载好的依赖包复制到远程linux服务器用户目录下；</p>
</li>
<li><p>登录linux服务器，在用户目录下执行以下命令：</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> .vscode-server</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> .vscode-server</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> ~/vscode-server-linux-x64.tar.gz bin/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> bin</span><br><span class="line"></span><br><span class="line">tar -zxvf vscode-server-linux-x64.tar</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> vscode-server-linux-x64 [<span class="built_in">id</span>] （注：[<span class="built_in">id</span>]为自己vscode的commit ID。）</span><br></pre></td></tr></table></figure>

<h2 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h2><p>如此配置完之后就能够正常连接远程服务器了。过程当中需要注意以下几个点：</p>
<ul>
<li>目录文件不要通过尝试连接的方式去生成，要自己创建</li>
<li>如果始终连不上思考是否是<code>vscode-server-linux-x64.tar.gz</code>的id版本不同</li>
<li>连接过程当中注意用户与端口的对应关系</li>
<li>连接成功之后远程上是没有插件的，需要上传插件到服务器进程远程安装</li>
</ul>
]]></content>
      <categories>
        <category>琐事</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
</search>
